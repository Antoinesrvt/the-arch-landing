---
// Live Showcase Page - Modernized with Search & Filter
import I18nLayout from '../../layouts/I18nLayout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { useTranslations, getStaticPaths } from '../../i18n/utils';
import type { Language } from '../../types';
import { episodes, getAllCategories } from '../../data/episodes';

export { getStaticPaths };

const { lang } = Astro.params;
const typedLang = lang as Language;
const t = useTranslations(typedLang);

const allCategories = getAllCategories();

// SEO Meta Tags
const title = t('live.title');
const description = t('live.description');
---

<I18nLayout 
  lang={typedLang}
  title={title}
  description={description}
>
  <Header currentLang={typedLang} />
  
  <main id="main-content" class="min-h-screen">
    <!-- Hero Section -->
    <section class="relative pt-32 pb-20 px-6 overflow-hidden">
      <!-- Animated background -->
      <div class="absolute inset-0 bg-gradient-to-b from-slate-900 via-purple-900/20 to-slate-900" aria-hidden="true"></div>
      <div class="absolute inset-0 opacity-30" style="background-image: radial-gradient(circle at 2px 2px, rgba(139, 92, 246, 0.15) 1px, transparent 0); background-size: 40px 40px;" aria-hidden="true"></div>
      
      <div class="container mx-auto max-w-7xl relative z-10">
        <div class="text-center max-w-4xl mx-auto">
          <!-- Badge -->
          <div class="inline-flex items-center gap-2 px-4 py-2 rounded-full border border-purple-500/30 bg-purple-500/10 backdrop-blur-sm mb-8 animate-fade-in">
            <svg class="w-5 h-5 text-purple-400" fill="currentColor" viewBox="0 0 24 24">
              <path d="M8 5v14l11-7z"/>
            </svg>
            <span class="text-sm font-semibold text-purple-300">{episodes.length} Épisodes Exclusifs</span>
          </div>
          
          <!-- Main Title -->
          <h1 class="text-5xl md:text-6xl lg:text-7xl font-extrabold text-white mb-6 leading-tight">
            <span class="bg-gradient-to-r from-white via-purple-200 to-white bg-clip-text text-transparent">
              {t('live.heroTitle')}
            </span>
          </h1>
          
          <!-- Subtitle -->
          <p class="text-xl md:text-2xl text-gray-300 leading-relaxed mb-12">
            {t('live.heroSubtitle')}
          </p>
          
          <!-- Stats -->
          <div class="flex flex-wrap justify-center gap-8 text-sm">
            <div class="flex items-center gap-2">
              <div class="w-12 h-12 rounded-xl bg-purple-500/20 border border-purple-500/30 flex items-center justify-center">
                <svg class="w-6 h-6 text-purple-400" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                </svg>
              </div>
              <div class="text-left">
                <div class="text-2xl font-bold text-white">{episodes.length}+</div>
                <div class="text-gray-400">Épisodes</div>
              </div>
            </div>
            
            <div class="flex items-center gap-2">
              <div class="w-12 h-12 rounded-xl bg-green-500/20 border border-green-500/30 flex items-center justify-center">
                <svg class="w-6 h-6 text-green-400" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z"/>
                </svg>
              </div>
              <div class="text-left">
                <div class="text-2xl font-bold text-white">50K+</div>
                <div class="text-gray-400">Vues</div>
              </div>
            </div>
            
            <div class="flex items-center gap-2">
              <div class="w-12 h-12 rounded-xl bg-blue-500/20 border border-blue-500/30 flex items-center justify-center">
                <svg class="w-6 h-6 text-blue-400" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
                </svg>
              </div>
              <div class="text-left">
                <div class="text-2xl font-bold text-white">100%</div>
                <div class="text-gray-400">Français</div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Search & Filter Section -->
    <section class="py-12 px-6 border-b border-white/10">
      <div class="container mx-auto max-w-7xl">
        <div class="flex flex-col lg:flex-row gap-6">
          <!-- Search Bar -->
          <div class="flex-1">
            <div class="relative">
              <svg class="absolute left-4 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
              </svg>
              <input 
                type="text" 
                id="episode-search"
                placeholder="Rechercher un invité, une entreprise, un sujet..."
                class="w-full pl-12 pr-4 py-4 bg-white/5 border border-white/10 rounded-xl text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-purple-500/50 focus:border-purple-500/50 transition-all"
              />
            </div>
          </div>
          
          <!-- Category Filter -->
          <div class="lg:w-64">
            <select 
              id="category-filter"
              class="w-full px-4 py-4 bg-white/5 border border-white/10 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-purple-500/50 focus:border-purple-500/50 transition-all appearance-none cursor-pointer"
              style="background-image: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"white\" viewBox=\"0 0 24 24\"><path d=\"M7 10l5 5 5-5z\"/></svg>'); background-repeat: no-repeat; background-position: right 1rem center; background-size: 1.5em;"
            >
              <option value="all">Toutes les catégories</option>
              {allCategories.map(category => (
                <option value={category}>{category}</option>
              ))}
            </select>
          </div>
        </div>
        
        <!-- Results count -->
        <div class="mt-6 text-center">
          <p id="results-count" class="text-gray-400">
            <span id="visible-count">{episodes.length}</span> épisode(s) affichés sur {episodes.length}
          </p>
        </div>
      </div>
    </section>

    <!-- Episodes Grid -->
    <section class="py-20 px-6">
      <div class="container mx-auto max-w-7xl">
        <div id="episodes-grid" class="grid md:grid-cols-2 gap-8">
          {episodes.map((episode, index) => (
            <article 
              class="episode-card glass-card p-8 rounded-2xl group hover:scale-[1.02] transition-all duration-300 relative overflow-hidden"
              data-category={episode.category}
              data-searchable={JSON.stringify({
                name: episode.guest.name,
                company: episode.guest.company,
                summary: episode.summary,
                tags: episode.tags.join(' '),
                category: episode.category
              })}
            >
              <!-- Gradient overlay -->
              <div class="absolute inset-0 bg-gradient-to-br from-purple-500/10 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500 pointer-events-none" aria-hidden="true"></div>
              
              <div class="relative z-10">
                <!-- Episode Header -->
                <div class="flex items-start gap-6 mb-6">
                  <div class="relative flex-shrink-0">
                    <img 
                      src={episode.thumbnail} 
                      alt={`Épisode avec ${episode.guest.name}`}
                      class="w-24 h-24 rounded-xl object-cover border-2 border-purple-500/30 group-hover:border-purple-500/60 transition-colors"
                      onerror={`this.onerror=null;this.src='https://placehold.co/96x96/1E293B/8A70D6?text=EP${index + 1}';`}
                    />
                    <div class="absolute inset-0 bg-black/50 rounded-xl flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity">
                      <a 
                        href={episode.youtube} 
                        target="_blank" 
                        rel="noopener noreferrer"
                        class="w-12 h-12 bg-red-600 rounded-full flex items-center justify-center hover:bg-red-700 transition-colors hover:scale-110 transform"
                        aria-label={`Regarder l'épisode avec ${episode.guest.name}`}
                      >
                        <svg class="w-6 h-6 text-white ml-1" fill="currentColor" viewBox="0 0 24 24">
                          <path d="M8 5v14l11-7z"/>
                        </svg>
                      </a>
                    </div>
                  </div>
                  
                  <div class="flex-1 min-w-0">
                    <div class="flex items-center gap-2 mb-2 flex-wrap">
                      <span class="text-xs px-3 py-1 bg-purple-500/20 border border-purple-500/30 text-purple-300 rounded-full font-semibold">
                        {episode.category}
                      </span>
                      <span class="text-xs text-gray-400">{episode.duration}</span>
                    </div>
                    <h3 class="text-2xl font-bold text-white mb-2 group-hover:text-purple-300 transition-colors">{episode.guest.name}</h3>
                    <p class="text-base text-purple-400 font-semibold mb-1">{episode.guest.role}</p>
                    <p class="text-sm text-gray-400 truncate">{episode.guest.company}</p>
                  </div>
                </div>

                <!-- Summary -->
                <div class="mb-6">
                  <p class="text-gray-300 leading-relaxed line-clamp-3">{episode.summary}</p>
                </div>

                <!-- Key Insights -->
                <div class="mb-6">
                  <h4 class="text-sm font-semibold text-white mb-2 flex items-center gap-2">
                    <svg class="w-4 h-4 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                    </svg>
                    Points clés
                  </h4>
                  <ul class="space-y-1">
                    {episode.keyInsights.slice(0, 2).map((insight) => (
                      <li class="flex items-start gap-2 text-sm text-gray-300">
                        <svg class="w-3 h-3 text-purple-400 mt-1 flex-shrink-0" fill="currentColor" viewBox="0 0 24 24">
                          <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                        </svg>
                        <span class="line-clamp-2">{insight}</span>
                      </li>
                    ))}
                  </ul>
                </div>

                <!-- Tags -->
                <div class="flex flex-wrap gap-2 mb-6">
                  {episode.tags.slice(0, 4).map((tag) => (
                    <span class="text-xs px-3 py-1 bg-white/5 border border-white/10 text-gray-300 rounded-full">
                      #{tag}
                    </span>
                  ))}
                </div>

                <!-- Actions -->
                <div class="flex gap-3">
                  <a 
                    href={episode.youtube} 
                    target="_blank" 
                    rel="noopener noreferrer"
                    class="flex-1 flex items-center justify-center gap-2 bg-red-600 hover:bg-red-700 text-white font-semibold py-3 px-4 rounded-xl transition-all hover:scale-105"
                  >
                    <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M8 5v14l11-7z"/>
                    </svg>
                    <span class="hidden sm:inline">Regarder</span>
                  </a>
                  <a 
                    href={episode.guest.linkedin} 
                    target="_blank" 
                    rel="noopener noreferrer"
                    class="px-4 py-3 border border-white/20 text-gray-300 hover:text-white hover:border-purple-500/50 hover:bg-white/5 rounded-xl transition-all"
                    aria-label={`LinkedIn de ${episode.guest.name}`}
                  >
                    <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"/>
                    </svg>
                  </a>
                </div>
              </div>
            </article>
          ))}
        </div>
        
        <!-- No results -->
        <div id="no-results" class="hidden text-center py-20">
          <div class="inline-flex items-center justify-center w-20 h-20 rounded-full bg-purple-500/10 border border-purple-500/30 mb-6">
            <svg class="w-10 h-10 text-purple-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
            </svg>
          </div>
          <h3 class="text-2xl font-bold text-white mb-2">Aucun épisode trouvé</h3>
          <p class="text-gray-400">Essayez avec d'autres mots-clés</p>
        </div>
      </div>
    </section>

    <!-- CTA Section -->
    <section class="py-24 px-6 bg-gradient-to-r from-purple-900/20 via-pink-900/20 to-purple-900/20 border-t border-white/10">
      <div class="container mx-auto max-w-4xl text-center">
        <h2 class="text-4xl md:text-5xl font-bold text-white mb-6">
          {t('live.ctaTitle')}
        </h2>
        <p class="text-xl text-gray-300 mb-10">
          {t('live.ctaSubtitle')}
        </p>
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          <a 
            href="https://cal.com/thearch/meet-the-arch"
            target="_blank"
            rel="noopener noreferrer"
            class="group relative inline-flex items-center justify-center px-8 py-4 text-lg font-semibold text-gray-900 bg-white rounded-xl hover:scale-105 transition-all"
          >
            {t('live.cta1')}
          </a>
          <a 
            href="https://www.youtube.com/@jointhearch"
            target="_blank"
            rel="noopener noreferrer"
            class="inline-flex items-center justify-center px-8 py-4 text-lg font-semibold text-white rounded-xl border-2 border-white/20 hover:bg-white/5 transition-all"
          >
            {t('live.cta2')}
          </a>
        </div>
      </div>
    </section>
  </main>

  <Footer lang={typedLang} />
</I18nLayout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const searchInput = document.getElementById('episode-search') as HTMLInputElement;
    const categoryFilter = document.getElementById('category-filter') as HTMLSelectElement;
    const episodesGrid = document.getElementById('episodes-grid');
    const noResults = document.getElementById('no-results');
    const visibleCount = document.getElementById('visible-count');
    const allCards = document.querySelectorAll('.episode-card');

    function filterEpisodes() {
      const searchTerm = searchInput.value.toLowerCase().trim();
      const selectedCategory = categoryFilter.value;
      let visibleCards = 0;

      allCards.forEach((card) => {
        const cardElement = card as HTMLElement;
        const category = cardElement.dataset.category || '';
        const searchableData = JSON.parse(cardElement.dataset.searchable || '{}');
        
        const matchesCategory = selectedCategory === 'all' || category === selectedCategory;
        const matchesSearch = !searchTerm || 
          Object.values(searchableData).some(value => 
            String(value).toLowerCase().includes(searchTerm)
          );

        if (matchesCategory && matchesSearch) {
          cardElement.classList.remove('hidden');
          visibleCards++;
        } else {
          cardElement.classList.add('hidden');
        }
      });

      if (visibleCount) visibleCount.textContent = String(visibleCards);

      if (episodesGrid && noResults) {
        if (visibleCards === 0) {
          episodesGrid.classList.add('hidden');
          noResults.classList.remove('hidden');
        } else {
          episodesGrid.classList.remove('hidden');
          noResults.classList.add('hidden');
        }
      }
    }

    if (searchInput) searchInput.addEventListener('input', filterEpisodes);
    if (categoryFilter) categoryFilter.addEventListener('change', filterEpisodes);

    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && searchInput) {
        searchInput.value = '';
        categoryFilter.value = 'all';
        filterEpisodes();
      }
    });
  });
</script>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>